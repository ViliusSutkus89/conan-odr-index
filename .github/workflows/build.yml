name: build_test

on:
  push:
  workflow_dispatch:
    inputs:
      package_name:
        description: Package name
        type: choice
        options:
          - all
          - odrcore
          - pdf2htmlex
          - fontforge
          - poppler
          - poppler-data
          - cairo
          - openlibm
          - fontconfig
          - glib
      package_version:
        description: Package version (leave empty to build all versions)
        required: false
      upload_to_artifactory:
        description: Upload built packages to artifactory
        type: boolean
        default: false

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  CCACHE_DIR: ${{ github.workspace }}/ccache
  CCACHE_MAXSIZE: 500M
  CCACHE_KEY_SUFFIX: r1

jobs:
  find-all-packages:
    runs-on: ubuntu-22.04
    outputs:
      packages-with-dependents: ${{ steps.list-packages-with-dependents.outputs.packages }}
      packages-without-dependents: ${{ steps.list-packages-without-dependents.outputs.packages }}
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          # Fetch whole git history.
          # Required to parse modified packages
          fetch-depth: 0

      - name: setup python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: install python dependencies
        run: pip install --upgrade pip conan

      - name: conan config
        run: conan config install .github/config/ubuntu-22.04/conan

      - name: Conan export all packages
        run: python scripts/conan_export_all_packages.py

      # Generate dependency graphs for all disjoint packages
      - run: conan graph info recipes/odrcore/all/conanfile.py --version=4.0.0 --profile:host=android-21-armv8 --format=json | tee odrcore-dependency-tree.json
        shell: bash # bash shell needed to pipefail on error
      - run: conan graph info recipes/pdf2htmlex/all/conanfile.py --version=0.18.8.rc1-20240619-git --profile:host=android-21-armv8 --format=json | tee pdf2htmlEX-dependency-tree.json
        shell: bash # bash shell needed to pipefail on error

      - name: Get requested packages and dependants from commits and workflow_dispatch inputs
        id: list-packages-with-dependents
        run: python scripts/list_package_versions.py --dependency-graph odrcore-dependency-tree.json pdf2htmlEX-dependency-tree.json
        env:
          GITHUB_EVENT: ${{ toJson(github.event) }}

      - name: Get requested packages from commits and workflow_dispatch inputs
        id: list-packages-without-dependents
        run: python scripts/list_package_versions.py
        env:
          GITHUB_EVENT: ${{ toJson(github.event) }}

  build:
    runs-on: ${{ matrix.config.build_machine }}
    if: ${{ needs.find-all-packages.outputs.packages-with-dependents != '[]' }}
    name: ${{ matrix.package.package_reference }} - ${{ matrix.config.host_profile }}
    needs:
      - find-all-packages
    strategy:
      fail-fast: false
      matrix:
        package: ${{ fromJson(needs.find-all-packages.outputs.packages-with-dependents) }}
        config:
          - { build_machine: ubuntu-22.04, host_profile: ubuntu }
          - { build_machine: ubuntu-22.04, host_profile: android-23-armv8, ndk_version: 26.3.11579264 }
          - { build_machine: ubuntu-22.04, host_profile: android-23-armv7, ndk_version: 26.3.11579264 }
          - { build_machine: ubuntu-22.04, host_profile: android-23-x86, ndk_version: 26.3.11579264 }
          - { build_machine: ubuntu-22.04, host_profile: android-23-x86_64, ndk_version: 26.3.11579264 }
          - { build_machine: ubuntu-22.04, host_profile: android-21-armv8, ndk_version: 26.3.11579264 }
          - { build_machine: ubuntu-22.04, host_profile: android-21-armv7, ndk_version: 26.3.11579264 }
          - { build_machine: ubuntu-22.04, host_profile: android-21-x86, ndk_version: 26.3.11579264 }
          - { build_machine: ubuntu-22.04, host_profile: android-21-x86_64, ndk_version: 26.3.11579264 }
        # Known not working build configurations
        # Would be cool to actually solve odrcore/1.0.0 for Android
        exclude:
          - package: { "package_reference": "odrcore/1.0.0", "package": "odrcore", "version": "1.0.0", "conanfile": "recipes/odrcore/all/conanfile.py", "test_conanfile": "recipes/odrcore/all/test_package/conanfile.py" }
            config: { build_machine: ubuntu-22.04, host_profile: android-23-armv8, ndk_version: 26.3.11579264 }
          - package: { "package_reference": "odrcore/1.0.0", "package": "odrcore", "version": "1.0.0", "conanfile": "recipes/odrcore/all/conanfile.py", "test_conanfile": "recipes/odrcore/all/test_package/conanfile.py" }
            config: { build_machine: ubuntu-22.04, host_profile: android-23-armv7, ndk_version: 26.3.11579264 }
          - package: { "package_reference": "odrcore/1.0.0", "package": "odrcore", "version": "1.0.0", "conanfile": "recipes/odrcore/all/conanfile.py", "test_conanfile": "recipes/odrcore/all/test_package/conanfile.py" }
            config: { build_machine: ubuntu-22.04, host_profile: android-23-x86, ndk_version: 26.3.11579264 }
          - package: { "package_reference": "odrcore/1.0.0", "package": "odrcore", "version": "1.0.0", "conanfile": "recipes/odrcore/all/conanfile.py", "test_conanfile": "recipes/odrcore/all/test_package/conanfile.py" }
            config: { build_machine: ubuntu-22.04, host_profile: android-23-x86_64, ndk_version: 26.3.11579264 }
          - package: { "package_reference": "odrcore/1.0.0", "package": "odrcore", "version": "1.0.0", "conanfile": "recipes/odrcore/all/conanfile.py", "test_conanfile": "recipes/odrcore/all/test_package/conanfile.py" }
            config: { build_machine: ubuntu-22.04, host_profile: android-21-armv8, ndk_version: 26.3.11579264 }
          - package: { "package_reference": "odrcore/1.0.0", "package": "odrcore", "version": "1.0.0", "conanfile": "recipes/odrcore/all/conanfile.py", "test_conanfile": "recipes/odrcore/all/test_package/conanfile.py" }
            config: { build_machine: ubuntu-22.04, host_profile: android-21-armv7, ndk_version: 26.3.11579264 }
          - package: { "package_reference": "odrcore/1.0.0", "package": "odrcore", "version": "1.0.0", "conanfile": "recipes/odrcore/all/conanfile.py", "test_conanfile": "recipes/odrcore/all/test_package/conanfile.py" }
            config: { build_machine: ubuntu-22.04, host_profile: android-21-x86, ndk_version: 26.3.11579264 }
          - package: { "package_reference": "odrcore/1.0.0", "package": "odrcore", "version": "1.0.0", "conanfile": "recipes/odrcore/all/conanfile.py", "test_conanfile": "recipes/odrcore/all/test_package/conanfile.py" }
            config: { build_machine: ubuntu-22.04, host_profile: android-21-x86_64, ndk_version: 26.3.11579264 }
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: ubuntu install ccache
        if: runner.os == 'Linux'
        run: |
          sudo apt install ccache
          ccache -V
      - name: macos install ccache
        if: runner.os == 'macOS'
        run: |
          brew install ccache
          ccache -V

      - name: setup python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: install python dependencies and setuptools (required to build GLib)
        run: pip install --upgrade pip conan setuptools

      - name: install NDK
        if: startsWith(matrix.config.host_profile, 'android')
        run: echo "y" | sudo ${ANDROID_HOME}/cmdline-tools/latest/bin/sdkmanager --install "ndk;${{ matrix.config.ndk_version }}"

      - name: conan remote
        run: conan remote add --index 0 odr https://artifactory.opendocument.app/artifactory/api/conan/conan
      - name: conan config
        run: conan config install .github/config/${{ matrix.config.build_machine }}/conan

      # Export all recipes to local conan cache, to make sure all changes in all dependencies are picked up
      - name: Conan export all packages
        run: python scripts/conan_export_all_packages.py

      - name: cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.ccache
            /Users/runner/Library/Caches/ccache
          key: ${{ matrix.config.build_machine }}-${{ matrix.config.host_profile }}-${{ env.CCACHE_KEY_SUFFIX }}
          restore-keys: |
            ${{ matrix.config.build_machine }}-${{ matrix.config.host_profile }}-

      - name: conan install
        run: conan install ${{ matrix.package.conanfile }} --version ${{ matrix.package.version }} --build missing --profile:host ${{ matrix.config.host_profile }} --profile:build ubuntu
      - name: conan source
        run: conan source ${{ matrix.package.conanfile }} --version ${{ matrix.package.version }}
      - name: conan build
        run: conan build ${{ matrix.package.conanfile }} --version ${{ matrix.package.version }} --profile:host ${{ matrix.config.host_profile }} --profile:build ubuntu
      - name: conan export
        run: conan export ${{ matrix.package.conanfile }} --version ${{ matrix.package.version }}
      - name: conan export-pkg
        run: conan export-pkg ${{ matrix.package.conanfile }} --version ${{ matrix.package.version }} --profile:host ${{ matrix.config.host_profile }} --profile:build ubuntu

      - name: conan test
        run: conan test ${{ matrix.package.test_conanfile }} ${{ matrix.package.package_reference }} --build missing --profile:host ${{ matrix.config.host_profile }} --profile:build ubuntu

      - name: conan login
        if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch' && github.event.inputs.upload_to_artifactory == 'true'
        run: conan remote login odr admin --password ${{ secrets.ARTIFACTORY }}

      - name: conan upload
        if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch' && github.event.inputs.upload_to_artifactory == 'true'
        run: conan upload "*" --check --confirm --remote odr

      - run: ccache --show-stats

  emulator-aosp_atd-target:
    if: ${{ needs.find-all-packages.outputs.packages-without-dependents != '[]' }}
    needs:
      - find-all-packages
#      @TODO: temporarily commented out
#      - build
    strategy:
      fail-fast: false
      matrix:
        package: ${{ fromJson(needs.find-all-packages.outputs.packages-without-dependents) }}
#        @TODO: temporarily commented out
#        emulator_api_level: [34, 33, 32, 31, 30]
        emulator_api_level: [34]
        build_api_level: [23, 21]
        arch: [x86_64]
        api_type_target: [aosp_atd]
    uses: ./.github/workflows/emulator-test-inner.yml
    with:
      emulator_api_level: ${{ matrix.emulator_api_level }}
      arch: ${{ matrix.arch }}
      api_type_target: ${{ matrix.api_type_target }}
      host_profile: android-${{ matrix.build_api_level }}-${{ matrix.arch }}
      ndk_version: "26.3.11579264"
      conanfile: ${{ matrix.package.conanfile }}
      test_conanfile: ${{ matrix.package.test_conanfile }}
      package_version: ${{ matrix.package.version }}
      package_reference: ${{ matrix.package.package_reference }}

  emulator-default-target:
    if: ${{ needs.find-all-packages.outputs.packages-without-dependents != '[]' }}
    needs:
      - find-all-packages
# @TODO: temporarily commented out
#      - build
    strategy:
      fail-fast: false
      matrix:
        package: ${{ fromJson(needs.find-all-packages.outputs.packages-without-dependents) }}
#         @TODO: temporarily commented out
#        emulator_api_level: [29, 28, 27, 26, 25, 24, 23, 22, 21]
        emulator_api_level: [23, 22, 21]
        build_api_level: [23, 21]
        api_type_target: [default]
        arch: [x86_64, x86]
        exclude:
          - build_api_level: 23
            emulator_api_level: 21
          - build_api_level: 23
            emulator_api_level: 22
    uses: ./.github/workflows/emulator-test-inner.yml
    with:
      emulator_api_level: ${{ matrix.emulator_api_level }}
      arch: ${{ matrix.arch }}
      api_type_target: ${{ matrix.api_type_target }}
      host_profile: android-${{ matrix.build_api_level }}-${{ matrix.arch }}
      ndk_version: "26.3.11579264"
      conanfile: ${{ matrix.package.conanfile }}
      test_conanfile: ${{ matrix.package.test_conanfile }}
      package_version: ${{ matrix.package.version }}
      package_reference: ${{ matrix.package.package_reference }}
