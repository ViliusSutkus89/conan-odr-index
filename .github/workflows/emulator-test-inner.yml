name: Android emulator inner
#run-name: Test on android-${{ inputs.api-level }} ${{ inputs.arch }} (${{ inputs.api-type-target }})
on:
  workflow_call:
    inputs:
      api_level:
        required: true
        type: string
      arch:
        required: true
        type: string
      api_type_target:
        required: true
        type: string
      host_profile:
        required: true
        type: string
      ndk_version:
        required: true
        type: string
      conanfile:
        required: true
        type: string
      test_conanfile:
        required: true
        type: string
      package_version:
        required: true
        type: string
jobs:
  instrumentedTests:
    runs-on: ubuntu-22.04
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: setup python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: install python dependencies and setuptools (required to build GLib)
        run: pip install --upgrade pip conan setuptools

      - name: install NDK
        run: echo "y" | sudo ${ANDROID_HOME}/cmdline-tools/latest/bin/sdkmanager --install "ndk;${{ inputs.ndk_version }}"

      - name: conan remote
        run: conan remote add --index 0 odr https://artifactory.opendocument.app/artifactory/api/conan/conan
      - name: conan config
        run: conan config install .github/config/ubuntu-22.04/conan

      # Multiple unpublished packages in this repo have inter-dependencies
      # Can't build them until the deps are published to artifactory or at least exported
      - name: Conan export all packages
        run: python scripts/conan_export_all_packages.py

      - name: conan install
        run: conan install ${{ inputs.conanfile }} --version ${{ inputs.package_version }} --build missing --profile:host ${{ inputs.host_profile }} --profile:build ubuntu
      - name: conan source
        run: conan source ${{ inputs.conanfile }} --version ${{ inputs.package_version }}
      - name: conan build
        run: conan build ${{ inputs.conanfile }} --version ${{ inputs.package_version }} --profile:host ${{ inputs.host_profile }} --profile:build ubuntu
      - name: conan export
        run: conan export ${{ inputs.conanfile }} --version ${{ inputs.package_version }}
      - name: conan export-pkg
        run: conan export-pkg ${{ inputs.conanfile }} --version ${{ inputs.package_version }} --profile:host ${{ inputs.host_profile }} --profile:build ubuntu

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - uses: reactivecircus/android-emulator-runner@v2
        with:
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -no-snapshot-save
          api-level: ${{ inputs.api_level }}
          arch: ${{ inputs.arch }}
          target: ${{ inputs.api_type_target }}
          script: conan test ${{ inputs.test_conanfile }} ${{ inputs.package_reference }} --build missing --profile:host ${{ inputs.host_profile }} --profile:build ubuntu 
