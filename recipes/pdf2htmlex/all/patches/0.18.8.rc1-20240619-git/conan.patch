diff --git a/pdf2htmlEX/CMakeLists.txt b/pdf2htmlEX/CMakeLists.txt
index 796ef63..53c0afb 100644
--- a/pdf2htmlEX/CMakeLists.txt
+++ b/pdf2htmlEX/CMakeLists.txt
@@ -12,110 +12,28 @@ include_directories(${CMAKE_SOURCE_DIR}/src)
 
 # Read/Set Cmake's PDF2HTMLEX_VERSION directly from the shell environment 
 # variable PDF2HTMLEX_VERSION 
-#
-set(PDF2HTMLEX_VERSION $ENV{PDF2HTMLEX_VERSION})
-#
+if(DEFINED ENV{PDF2HTMLEX_VERSION})
+    set(PDF2HTMLEX_VERSION $ENV{PDF2HTMLEX_VERSION})
+endif()
+
 set(ARCHIVE_NAME pdf2htmlex-${PDF2HTMLEX_VERSION})
 add_custom_target(dist
     COMMAND git archive --prefix=${ARCHIVE_NAME}/ HEAD
         | bzip2 > ${CMAKE_BINARY_DIR}/${ARCHIVE_NAME}.tar.bz2
     WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})
 
-find_package(PkgConfig)
-
-
-# SINCE we have a very intimate relationship with a particular version of 
-# poppler... we explicitly describe the poppler include and library 
-# paths.
-#
-include_directories(
-  ../poppler/build/poppler
-  ../poppler/build
-  ../poppler/poppler
-  ../poppler
-)
-#
-# The following order is critical as the glib functions use functions 
-# located in the main poppler library 
-#
-set(POPPLER_LIBRARIES ${POPPLER_LIBRARIES}
-  ${CMAKE_SOURCE_DIR}/../poppler/build/glib/libpoppler-glib.a
-  ${CMAKE_SOURCE_DIR}/../poppler/build/libpoppler.a
-)
-
-
+find_package(poppler REQUIRED)
+set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} poppler::libpoppler poppler::libpoppler-cpp poppler::libpoppler-splash poppler::libpoppler-cairo poppler::libpoppler-glib)
 if(ENABLE_SVG)
-    pkg_check_modules(CAIRO REQUIRED cairo>=1.10.0)
-    message("-- Trying to locate cairo-svg...")
-    find_path(CAIRO_SVG_INCLUDE_PATH cairo-svg.h PATHS ${CAIRO_INCLUDE_DIRS} NO_DEFAULT_PATH)
-    if(CAIRO_SVG_INCLUDE_PATH)
-        message("--    found cairo-svg...")
-        include_directories(${CAIRO_INCLUDE_DIRS})
-        if(NOT DEFINED ENV{USING_BREW})
-            link_directories(${CAIRO_LIBRARY_DIRS})
-            set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} ${CAIRO_LIBRARIES})
-        endif()
-        set(ENABLE_SVG 1)
-    else()
-        message(FATAL_ERROR "Error: no SVG support found in Cairo")
-    endif()
-
-    find_package(Freetype REQUIRED)
-    include_directories(${FREETYPE_INCLUDE_DIRS})
-    link_directories(${FREETYPE_LIBRARY_DIRS})
-#    set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} ${FREETYPE_LIBRARIES})
+    find_package(cairo REQUIRED)
+    set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} cairo::cairo-svg)
+    find_package(freetype REQUIRED)
+    set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} Freetype::Freetype)
+    set(ENABLE_SVG 1)
 endif()
 
-# SINCE we have a very intimate relationship with a particular version of 
-# fontforge... we explicitly describe the fontforge include and library 
-# paths.
-#
-include_directories(
-  ../fontforge/fontforge
-  ../fontforge
-  ../fontforge/build/inc
-  ../fontforge/inc
-)
-#
-include_directories(${FONTFORGE_INCLUDE_DIRS})
-link_directories(${FONTFORGE_LIBRARY_DIRS})
-set(FONTFORGE_LIBRARIES ${FONTFORGE_LIBRARIES}
-  ${CMAKE_SOURCE_DIR}/../fontforge/build/lib/libfontforge.a
-)
-
-# If we are using Alpine Linux then we need to add -lintl
-#
-if (EXISTS /usr/lib/libintl.so ) 
-  set(LIB_INTL_LIBRARIES -lintl )
-else ()
-  set(LIB_INTL_LIBRARIES "" )
-endif()
-
-set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS}
-  ${POPPLER_LIBRARIES}
-  ${FONTFORGE_LIBRARIES}
-  ${LIB_INTL_LIBRARIES}
-  ${CAIRO_LIBRARIES}
-  -ljpeg
-  -lpng
-  -lfontconfig
-  -lfreetype
-  -lxml2
-  -lglib-2.0
-  -lgio-2.0
-  -lgobject-2.0
-  -lz
-  -lm
-)
-
-# debug build flags (overwrite default cmake debug flags)
-set(CMAKE_C_FLAGS_DEBUG "-ggdb -pg")
-set(CMAKE_CXX_FLAGS_DEBUG "-ggdb -pg")
-set(CMAKE_EXE_LINKER_FLAGS_DEBUG "-pg")
-
-# release build flags (overwrite default cmake release flags)
-set(CMAKE_C_FLAGS_RELEASE "-O2 -DNDEBUG")
-set(CMAKE_CXX_FLAGS_RELEASE "-O2 -DNDEBUG")
+find_package(fontforge REQUIRED)
+set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} fontforge::fontforge)
 
 # generic flags
 set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall")
diff --git a/pdf2htmlEX/src/util/ffw.c b/pdf2htmlEX/src/util/ffw.c
index 7f99a78..b129386 100644
--- a/pdf2htmlEX/src/util/ffw.c
+++ b/pdf2htmlEX/src/util/ffw.c
@@ -18,20 +18,20 @@
 
 #include "SignalHandler.h"
 
-#include "ffw.h"                      // needed for:
-#include "gfile.h"                    //   FindProgDir => FindProgRoot in 20230101
-#include "fontforge/autowidth.h"      //   FVRemoveKerns
-#include "fontforge/bitmapchar.h"     //   SFReplaceEncodingBDFProps
-#include "fontforge/cvimages.h"       //   FVImportImages
-#include "fontforge/encoding.h"       //   (helpful as we have a name conflict)
-#include "fontforge/fvfonts.h"        //   SFFindSlot
-#include "fontforge/namelist.h"       //   UniFromName
-#include "fontforge/savefont.h"       //   GenerateScript
-#include "fontforge/splineorder2.h"   //   SFConvertToOrder2
-#include "fontforge/splineutil.h"     //   AltUniFree
-#include "fontforge/splineutil2.h"    //   SplineFontNew
-#include "fontforge/start.h"          //   InitSimpleStuff
-#include "fontforge/tottf.h"          //   SFDefaultOS2Info
+#include "ffw.h"          // needed for:
+#include <gfile.h>        //   FindProgDir => FindProgRoot in 20230101
+#include <autowidth.h>    //   FVRemoveKerns
+#include <bitmapchar.h>   //   SFReplaceEncodingBDFProps
+#include <cvimages.h>     //   FVImportImages
+#include <encoding.h>     //   (helpful as we have a name conflict)
+#include <fvfonts.h>      //   SFFindSlot
+#include <namelist.h>     //   UniFromName
+#include <savefont.h>     //   GenerateScript
+#include <splineorder2.h> //   SFConvertToOrder2
+#include <splineutil.h>   //   AltUniFree
+#include <splineutil2.h>  //   SplineFontNew
+#include <start.h>        //   InitSimpleStuff
+#include <tottf.h>        //   SFDefaultOS2Info
 
 static real EPS=1e-6;
 
